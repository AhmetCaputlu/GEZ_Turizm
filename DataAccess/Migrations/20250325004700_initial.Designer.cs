// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(GezTurizmContext))]
    [Migration("20250325004700_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractDriver_RentalVehicle", b =>
                {
                    b.Property<int>("ContactDriverId")
                        .HasColumnType("int");

                    b.Property<int>("RentalVehicleId")
                        .HasColumnType("int");

                    b.HasKey("ContactDriverId", "RentalVehicleId");

                    b.HasIndex("RentalVehicleId");

                    b.ToTable("ContractDrivers_RentalVehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractDriver_Vehicle", b =>
                {
                    b.Property<int>("ContractDriverId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ContractDriverId", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("ContractDrivers_Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractTourGuide_ServiceRegion", b =>
                {
                    b.Property<int?>("ContractTourGuideId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceRegionId")
                        .HasColumnType("int");

                    b.HasKey("ContractTourGuideId", "ServiceRegionId");

                    b.HasIndex("ServiceRegionId");

                    b.ToTable("ContractTourGuides_ServiceRegions");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractTourGuide_Tour", b =>
                {
                    b.Property<int?>("ContractTourGuideId")
                        .HasColumnType("int");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ContractTourGuideId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("ContractTourGuide_Tour");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 545, DateTimeKind.Local).AddTicks(8926));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("fa7cd605-f9c2-457c-97c5-3791e146b20b");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Description")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("878e68fc-b30c-428d-8a32-4c0f12597cc8");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 553, DateTimeKind.Local).AddTicks(1561));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("ac95461a-7f1f-4bc6-b2e7-cf276d2abb84");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Description")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("8ff5ffe4-17d8-4957-a869-3a4136ca8e2a");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TourCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptTickets")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 553, DateTimeKind.Local).AddTicks(9088));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("66cdae2c-924f-4946-b3c2-c4a99e2bf459");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("ee059693-9fb2-4e63-882e-a810614890d3");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PartnerCompanies");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompanyTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 554, DateTimeKind.Local).AddTicks(3319));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("991afde5-03bd-4bf8-b29c-5edc390f0f98");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<decimal>("Debt")
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("163e79b5-084d-4a52-979b-af289d16ec5a");

                    b.Property<int?>("PartnerCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Receive")
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerCompanyId");

                    b.ToTable("PartnerCompanyTransactions");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.ProductSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 554, DateTimeKind.Local).AddTicks(6079));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("f6098cde-24c8-4118-ba78-2d1135212beb");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("542453ca-2f48-4a3b-9be2-f6ba5783a7e8");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ProductSuppliers");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.RentalVehicleSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 554, DateTimeKind.Local).AddTicks(9921));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("4ed7dad2-0815-4500-a4eb-ed9ae47884ac");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("b2d29b7d-33d5-4196-af80-43d6252ade77");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("RentalVehicleSuppliers");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.SubContractWorkerSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 555, DateTimeKind.Local).AddTicks(3784));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("05a40ddf-ccf6-45ae-be92-b5e01e9c8355");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("92f1325e-c557-4af0-9b60-01515a3aa762");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SubContractWorkerSuppliers");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Countries.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryDescription")
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CountryPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 555, DateTimeKind.Local).AddTicks(8724));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("8d5211b7-0433-48ec-92c3-43d4efdb1e27");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("77b160f8-132c-4860-aabd-d76406dbb203");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 556, DateTimeKind.Local).AddTicks(2518));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("4abe2a14-91d9-49fd-b863-87d6f1bd3726");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("DriverLicense")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValue("None");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("EndContract")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("81bcf5c7-e6d8-4dc9-8aff-5c7e7a8a8fa3");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<int?>("SubContractWorkerSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TCN_Passport")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("SubContractWorkerSupplierId");

                    b.ToTable("ContractDrivers");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractTourGuide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 556, DateTimeKind.Local).AddTicks(9097));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("f4eee1f4-d628-4c59-90ba-36f4b89981aa");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("EndContract")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("b6cab846-78d7-4bd6-805e-6121d64293e9");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasDefaultValue("None");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<int?>("SubContractWorkerSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TCN_Passport")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("SubContractWorkerSupplierId");

                    b.ToTable("ContractTourGuides");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 557, DateTimeKind.Local).AddTicks(4550));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("16dbd3aa-7309-4aad-8c87-4a69881c8935");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("CurrentPosition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DaysWorked")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("EndContract")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("9e965561-e256-4b0d-8329-2e3143f55013");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ResidenceRegionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TCN_Passport")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ResidenceRegionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.EventTicketOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 559, DateTimeKind.Local).AddTicks(3488));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("9a135857-cfb7-4fd8-83ce-654ffaacd6cd");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(4,2)");

                    b.Property<int?>("EventTicketId")
                        .HasColumnType("int");

                    b.Property<int?>("EventTicketOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("7d7f96a5-4040-46ea-84b8-e44f7ddf0cf4");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EventTicketId");

                    b.HasIndex("EventTicketOrderId");

                    b.ToTable("EventTicketOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.ProductOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 559, DateTimeKind.Local).AddTicks(8519));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("90071caa-a0d3-42de-a028-5b1f5ad67cae");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("fb5e64b8-b248-4f81-a7c6-eb6c0a665c14");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOrderId");

                    b.ToTable("ProductOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.TourTicketOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 560, DateTimeKind.Local).AddTicks(3019));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("3ee79cb4-06a5-4f5a-8a0c-b8e6bba33d24");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("15140d8e-0e37-43a0-a833-31d2a72e7f2c");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TourTicketId")
                        .HasColumnType("int");

                    b.Property<int?>("TourTicketOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("TourTicketId");

                    b.HasIndex("TourTicketOrderId");

                    b.ToTable("TourTicketOrderDetail");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.EventTicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 560, DateTimeKind.Local).AddTicks(7566));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("9a4564c4-3dbf-4ee6-b142-0798cc0ef91c");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("6f2afed9-25ce-455a-9f5e-71cfaf98d85d");

                    b.Property<string>("Note")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WebUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("WebUserEmail")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WebUserAccountId");

                    b.ToTable("EventTicketOrders");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 561, DateTimeKind.Local).AddTicks(1866));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("7f5ffe7d-4b51-4565-8cf7-a836fd132267");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("615900c1-d20b-4677-8df5-ee90199791c1");

                    b.Property<string>("Note")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WebUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("WebUserEmail")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WebUserAccountId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.TourTicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 561, DateTimeKind.Local).AddTicks(6425));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("aba21a6d-44fb-4a89-a40d-e3de88946973");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("0c313d3e-9335-4f69-97a1-307f11a61d3c");

                    b.Property<string>("Note")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WebUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("WebUserEmail")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WebUserAccountId");

                    b.ToTable("TourTicketOrders");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.PassTickets.PassEventTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CommissionRate")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 562, DateTimeKind.Local).AddTicks(764));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("aa93c43a-4a7c-4d45-bc53-80b94fc3a775");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("DepartureAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("faacd8ab-d416-4747-9a51-b8b5ad00fe09");

                    b.Property<int?>("PartnerCompanyTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCostwithCommission")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerCompanyTransactionId");

                    b.ToTable("PassEventTickets");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.PassTickets.PassTourTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CommissionRate")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 562, DateTimeKind.Local).AddTicks(6371));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("51ec9a4e-47ce-4564-9c93-33236b8a0b20");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("DepartureAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("09d0bd24-ba09-40a9-a5e3-0af7ff8e07ea");

                    b.Property<int?>("PartnerCompanyTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCostwithCommission")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerCompanyTransactionId");

                    b.ToTable("PassTourTickets");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 563, DateTimeKind.Local).AddTicks(8878));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("0eface94-61c6-45e5-a30a-d97ee422703d");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("5c3fe1b2-e4e9-43c0-bf2d-87ff5f97dd90");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int?>("ProductSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductSupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Products.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 563, DateTimeKind.Local).AddTicks(2862));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("59769ff2-e1ac-4fa6-9224-838a7dc70dc2");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("c89b4bad-0332-46a0-b413-77a42ed7344e");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Regions.ResidenceRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("ArrivalTime")
                        .HasColumnType("TIME");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 564, DateTimeKind.Local).AddTicks(2284));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("a0f37f34-ad18-47f0-abb7-68d11cad98fb");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("524a4b77-65ab-4e41-a995-4d3e0ef46a2c");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TransportVehicle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ResidenceRegions");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Regions.ServiceRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("ArrivalTime")
                        .HasColumnType("TIME");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 564, DateTimeKind.Local).AddTicks(5355));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("fb597568-f565-4a4b-8f2c-94ba4c0bdc87");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("14b468cd-e768-4e13-89b1-081e5a48feb4");

                    b.Property<bool>("HasAirport")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHotelFacility")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<bool>("TouristPopulation")
                        .HasColumnType("bit");

                    b.Property<string>("TransportVehicle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ServiceRegions");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.EventTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 564, DateTimeKind.Local).AddTicks(9248));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("8df58745-8928-4985-ac5d-3c868265b5fd");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureAdress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAdress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("ef012513-6ed2-4fdb-8c0c-eee6a3467792");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventTickets");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.TourTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 565, DateTimeKind.Local).AddTicks(2792));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("b1d17e8c-aed8-4dd2-9004-2c568bbd7093");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureAdress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAdress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte>("DiscountRate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("72f680de-df20-49c3-8b9c-8eb61c5a858b");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourTickets");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.RentalVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<short>("Capacity")
                        .HasMaxLength(2)
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 565, DateTimeKind.Local).AddTicks(6466));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("53867f95-89b9-4eeb-a668-203e53936548");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<decimal>("DailyRentalFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("5db011af-f978-46ed-80d1-0af2ecb06d7a");

                    b.Property<int>("Kilometer")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Model")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RentalVehicleSupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("TotalRentalDay")
                        .HasColumnType("int");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("RentalVehicleSupplierId");

                    b.HasIndex("TourId");

                    b.ToTable("RentalVehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<short>("Capacity")
                        .HasMaxLength(2)
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 566, DateTimeKind.Local).AddTicks(1983));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("d0cfc83e-dbc7-4737-9af4-a5e004841bda");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("55c453ed-2505-4c11-9bfc-b21619973172");

                    b.Property<int>("Kilometer")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("MarketValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Model")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("TourId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.WebUsers.WebUserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 568, DateTimeKind.Local).AddTicks(5043));

                    b.Property<string>("CreatedID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatedIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("IP verilmedi");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unknown");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "014e084d-3a61-479f-b219-9dc3ceb7064a",
                            CreatedDate = new DateTime(2014, 4, 4, 12, 50, 21, 0, DateTimeKind.Unspecified),
                            CreatedID = "510d9d12-a558-4ede-b4c2-e1f27b82fd70",
                            CreatedIPAddress = "CreatedIPAdress 0",
                            Email = "Email 0",
                            EmailConfirmed = false,
                            Guid = "ee7c8970-37e6-40ff-a2a3-6e2ac109eb75",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 0",
                            NormalizedUserName = "USERNAME 0",
                            PasswordHash = "$2a$11$/a9BJtyqekKH5CxtfkedAuHTnRWIC5GVh.Ht/qc3PzEexGG3CRpxW",
                            PhoneNumber = "PNumber 0",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "258ba2db-4205-4500-9597-a3fb6db83cfe",
                            Status = "Unknown",
                            TwoFactorEnabled = false,
                            UserName = "UserName 0"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23035c05-d4f7-4d62-93b3-d55efc6da981",
                            CreatedDate = new DateTime(2002, 4, 13, 22, 38, 3, 0, DateTimeKind.Unspecified),
                            CreatedID = "5cf80f86-f504-4579-bcf2-36d0549086a1",
                            CreatedIPAddress = "CreatedIPAdress 1",
                            Email = "Email 1",
                            EmailConfirmed = false,
                            Guid = "49ecff87-6bf3-4d78-8ebd-c4755fb7c0c5",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 1",
                            NormalizedUserName = "USERNAME 1",
                            PasswordHash = "$2a$11$/O7QMv5ZX6GomhhTxaGSfOH1IQ7kgyphUG0ltePufisGGEHxfkjDG",
                            PhoneNumber = "PNumber 1",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fad04d7-6317-4026-9ca0-029b629bf135",
                            Status = "Active",
                            TwoFactorEnabled = false,
                            UserName = "UserName 1"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e0bb9ede-1efb-45a4-8d3e-44a2ed1e052a",
                            CreatedDate = new DateTime(2012, 9, 4, 4, 59, 44, 0, DateTimeKind.Unspecified),
                            CreatedID = "e21d8e55-792f-4a8f-8145-408549206702",
                            CreatedIPAddress = "CreatedIPAdress 2",
                            Email = "Email 2",
                            EmailConfirmed = false,
                            Guid = "155e95a9-6909-4f19-8561-0a83cacc34dc",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 2",
                            NormalizedUserName = "USERNAME 2",
                            PasswordHash = "$2a$11$cidf7z5.RHp3jCbEEX/kQukLCo7.SuSv3t4xSJ2HrEygZH5c6jm2.",
                            PhoneNumber = "PNumber 2",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ae44b540-2603-48c8-b38b-4b1fbad5bbdd",
                            Status = "Passive",
                            TwoFactorEnabled = false,
                            UserName = "UserName 2"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "50be9fe2-0a01-4775-b3c7-11bd08caf029",
                            CreatedDate = new DateTime(2019, 7, 1, 16, 34, 46, 0, DateTimeKind.Unspecified),
                            CreatedID = "94724bd5-89c5-46ae-827e-01645ceba40b",
                            CreatedIPAddress = "CreatedIPAdress 3",
                            Email = "Email 3",
                            EmailConfirmed = false,
                            Guid = "78cb11f0-c5c9-465e-8330-8d281afc39b8",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 3",
                            NormalizedUserName = "USERNAME 3",
                            PasswordHash = "$2a$11$BXc91ZHTD95/UNpiKVkTJuIveOfa3LGS1mpi2v73cx1UsKuCJKPgi",
                            PhoneNumber = "PNumber 3",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bc71b51a-9537-43c5-84bf-2ff84ba1d667",
                            Status = "Active",
                            TwoFactorEnabled = false,
                            UserName = "UserName 3"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8b121395-dfff-4d4c-a105-37000678cebd",
                            CreatedDate = new DateTime(2000, 7, 26, 6, 26, 27, 0, DateTimeKind.Unspecified),
                            CreatedID = "f197fc33-564a-463d-be04-016b05df5212",
                            CreatedIPAddress = "CreatedIPAdress 4",
                            Email = "Email 4",
                            EmailConfirmed = false,
                            Guid = "35091155-9576-47c3-9549-991ade1bf622",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 4",
                            NormalizedUserName = "USERNAME 4",
                            PasswordHash = "$2a$11$hsEIuSoYktF0Lg85qXhyOuf9xHtVpPMEURDXAEzK96MV7Km9SJv/u",
                            PhoneNumber = "PNumber 4",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "17750dab-02f9-43fc-9c14-ee66bf96db64",
                            Status = "Unknown",
                            TwoFactorEnabled = false,
                            UserName = "UserName 4"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "07f693cd-0f4b-4800-a12f-a23161ab8cef",
                            CreatedDate = new DateTime(2018, 6, 27, 4, 9, 15, 0, DateTimeKind.Unspecified),
                            CreatedID = "c2b50fc1-7311-4b3e-8695-4edd8e37a143",
                            CreatedIPAddress = "CreatedIPAdress 5",
                            Email = "Email 5",
                            EmailConfirmed = false,
                            Guid = "db4f1813-8d13-4ee5-8bb9-96c93272859d",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 5",
                            NormalizedUserName = "USERNAME 5",
                            PasswordHash = "$2a$11$fwky/Dmo6sCsnGRQqMzW8O9CBCZfrhVQvotPjgs4.IBZK9KrW3V3q",
                            PhoneNumber = "PNumber 5",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "35ddb6f1-2ac2-400e-8115-48d918418c96",
                            Status = "Active",
                            TwoFactorEnabled = false,
                            UserName = "UserName 5"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "681afd18-fc6f-4b27-80b3-9a0e227cb70e",
                            CreatedDate = new DateTime(2018, 6, 3, 17, 45, 38, 0, DateTimeKind.Unspecified),
                            CreatedID = "eb3533eb-87d5-44d1-a8c4-d3b788637885",
                            CreatedIPAddress = "CreatedIPAdress 6",
                            Email = "Email 6",
                            EmailConfirmed = false,
                            Guid = "b07ec015-e9c0-4d8c-9320-ef9fcc85fa99",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 6",
                            NormalizedUserName = "USERNAME 6",
                            PasswordHash = "$2a$11$UYxdxyWIiewFVAICG7qrhuxczmfIdb6Jv587aedTiy4BlsAnM2jaK",
                            PhoneNumber = "PNumber 6",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9cc29b21-c1ba-401f-8868-ddb3fba8407f",
                            Status = "Active",
                            TwoFactorEnabled = false,
                            UserName = "UserName 6"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70660687-46f3-40c6-99fc-485fa95c3e0b",
                            CreatedDate = new DateTime(2012, 10, 20, 6, 41, 17, 0, DateTimeKind.Unspecified),
                            CreatedID = "bc63c3fd-cabb-460f-a9e0-3b7d0a47652c",
                            CreatedIPAddress = "CreatedIPAdress 7",
                            Email = "Email 7",
                            EmailConfirmed = false,
                            Guid = "0e96755b-5500-4302-a77a-462c421296da",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 7",
                            NormalizedUserName = "USERNAME 7",
                            PasswordHash = "$2a$11$2kJ14NeyGwWwn7mwojH7wO/farOoRmkkBugDAcEwxw0lUSciUtEJO",
                            PhoneNumber = "PNumber 7",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eeef4721-dcce-4120-b195-1401a09bb974",
                            Status = "Unknown",
                            TwoFactorEnabled = false,
                            UserName = "UserName 7"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e80f39f7-2c74-4dd5-8192-be8fe635459d",
                            CreatedDate = new DateTime(2004, 12, 9, 10, 23, 50, 0, DateTimeKind.Unspecified),
                            CreatedID = "609e1f6f-0706-40ef-a339-ac651e21d49a",
                            CreatedIPAddress = "CreatedIPAdress 8",
                            Email = "Email 8",
                            EmailConfirmed = false,
                            Guid = "e668db5e-1438-459b-85c3-f0ae1146aaef",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 8",
                            NormalizedUserName = "USERNAME 8",
                            PasswordHash = "$2a$11$2MGZAVyCqpZpn9xlSrqpuekekOGzsXpufRjrc9Rr1OCe7JjiNK.NS",
                            PhoneNumber = "PNumber 8",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "31268fd0-578d-49d2-a122-869b1f99393b",
                            Status = "Unknown",
                            TwoFactorEnabled = false,
                            UserName = "UserName 8"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "042fab42-c5de-4a6e-8720-d4f9d39542f6",
                            CreatedDate = new DateTime(2004, 4, 19, 10, 34, 45, 0, DateTimeKind.Unspecified),
                            CreatedID = "bee24db9-dc81-4af7-b29f-db27f922d393",
                            CreatedIPAddress = "CreatedIPAdress 9",
                            Email = "Email 9",
                            EmailConfirmed = false,
                            Guid = "fa927344-e5d1-45dc-b5fe-4740ea5bb852",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMAİL 9",
                            NormalizedUserName = "USERNAME 9",
                            PasswordHash = "$2a$11$HC2yQqBj2D1sn6If3zRJPut2F8gPFojphsR9b8FAr2tE.7pmNGia.",
                            PhoneNumber = "PNumber 9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "96d59572-f737-4823-976a-4022c595aea8",
                            Status = "Active",
                            TwoFactorEnabled = false,
                            UserName = "UserName 9"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Models.WebUsers.WebUserProfile", b =>
                {
                    b.Property<int?>("WebUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasDefaultValue("Unknown");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TCN_Passport")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 3, 25, 3, 46, 59, 569, DateTimeKind.Local).AddTicks(752));

                    b.HasKey("WebUserAccountId");

                    b.ToTable("AspNetUserProfiles");

                    b.HasData(
                        new
                        {
                            WebUserAccountId = 1,
                            Address = "Adress 0",
                            Age = (byte)68,
                            BirthDate = new DateTime(1956, 5, 16, 11, 17, 8, 0, DateTimeKind.Unspecified),
                            Email = "Email 0",
                            FirstName = "FirstName 0",
                            Gender = "Male",
                            LastName = "LastName 0",
                            PhoneNumber = "PNumber 0",
                            PhotoPath = "PhotoPath 0",
                            TCN_Passport = "TCN 0",
                            UpdatedDate = new DateTime(2010, 4, 14, 22, 42, 36, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 2,
                            Address = "Adress 1",
                            Age = (byte)38,
                            BirthDate = new DateTime(1986, 4, 16, 23, 16, 41, 0, DateTimeKind.Unspecified),
                            Email = "Email 1",
                            FirstName = "FirstName 1",
                            Gender = "Male",
                            LastName = "LastName 1",
                            PhoneNumber = "PNumber 1",
                            PhotoPath = "PhotoPath 1",
                            TCN_Passport = "TCN 1",
                            UpdatedDate = new DateTime(2016, 2, 16, 17, 17, 23, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 3,
                            Address = "Adress 2",
                            Age = (byte)37,
                            BirthDate = new DateTime(1988, 2, 13, 20, 19, 44, 0, DateTimeKind.Unspecified),
                            Email = "Email 2",
                            FirstName = "FirstName 2",
                            Gender = "Unknown",
                            LastName = "LastName 2",
                            PhoneNumber = "PNumber 2",
                            PhotoPath = "PhotoPath 2",
                            TCN_Passport = "TCN 2",
                            UpdatedDate = new DateTime(2017, 7, 9, 16, 43, 4, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 4,
                            Address = "Adress 3",
                            Age = (byte)21,
                            BirthDate = new DateTime(2003, 4, 14, 12, 45, 24, 0, DateTimeKind.Unspecified),
                            Email = "Email 3",
                            FirstName = "FirstName 3",
                            Gender = "Female",
                            LastName = "LastName 3",
                            PhoneNumber = "PNumber 3",
                            PhotoPath = "PhotoPath 3",
                            TCN_Passport = "TCN 3",
                            UpdatedDate = new DateTime(2010, 9, 8, 22, 51, 23, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 5,
                            Address = "Adress 4",
                            Age = (byte)27,
                            BirthDate = new DateTime(1997, 7, 3, 6, 36, 19, 0, DateTimeKind.Unspecified),
                            Email = "Email 4",
                            FirstName = "FirstName 4",
                            Gender = "Male",
                            LastName = "LastName 4",
                            PhoneNumber = "PNumber 4",
                            PhotoPath = "PhotoPath 4",
                            TCN_Passport = "TCN 4",
                            UpdatedDate = new DateTime(2004, 12, 7, 17, 59, 38, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 6,
                            Address = "Adress 5",
                            Age = (byte)23,
                            BirthDate = new DateTime(2001, 8, 22, 23, 10, 26, 0, DateTimeKind.Unspecified),
                            Email = "Email 5",
                            FirstName = "FirstName 5",
                            Gender = "Male",
                            LastName = "LastName 5",
                            PhoneNumber = "PNumber 5",
                            PhotoPath = "PhotoPath 5",
                            TCN_Passport = "TCN 5",
                            UpdatedDate = new DateTime(2007, 2, 4, 4, 35, 25, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 7,
                            Address = "Adress 6",
                            Age = (byte)36,
                            BirthDate = new DateTime(1989, 1, 7, 4, 14, 48, 0, DateTimeKind.Unspecified),
                            Email = "Email 6",
                            FirstName = "FirstName 6",
                            Gender = "Male",
                            LastName = "LastName 6",
                            PhoneNumber = "PNumber 6",
                            PhotoPath = "PhotoPath 6",
                            TCN_Passport = "TCN 6",
                            UpdatedDate = new DateTime(2018, 11, 23, 15, 49, 52, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WebUserAccountId = 8,
                            Address = "Adress 7",
                            Age = (byte)59,
                            BirthDate = new DateTime(1965, 12, 22, 23, 46, 31, 0, DateTimeKind.Unspecified),
                            Email = "Email 7",
                            FirstName = "FirstName 7",
                            Gender = "Male",
                            LastName = "LastName 7",
                            PhoneNumber = "PNumber 7",
                            PhotoPath = "PhotoPath 7",
                            TCN_Passport = "TCN 7",
                            UpdatedDate = new DateTime(2016, 3, 27, 1, 21, 31, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractDriver_RentalVehicle", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.ContractDriver", "ContractDriver")
                        .WithMany("ContractDrivers_RentalVehicles")
                        .HasForeignKey("ContactDriverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Models.Vehicles.RentalVehicle", "RentalVehicle")
                        .WithMany("ContractDrivers_RentalVehicles")
                        .HasForeignKey("RentalVehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContractDriver");

                    b.Navigation("RentalVehicle");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractDriver_Vehicle", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.ContractDriver", "ContractDriver")
                        .WithMany("ContractDrivers_Vehicles")
                        .HasForeignKey("ContractDriverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Models.Vehicles.Vehicle", "Vehicle")
                        .WithMany("ContractDrivers_Vehicles")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContractDriver");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractTourGuide_ServiceRegion", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.ContractTourGuide", "ContractTourGuide")
                        .WithMany("ContractTourGuides_ServiceRegions")
                        .HasForeignKey("ContractTourGuideId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Models.Regions.ServiceRegion", "ServiceRegion")
                        .WithMany("ContractTourGuides_ServiceRegions")
                        .HasForeignKey("ServiceRegionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContractTourGuide");

                    b.Navigation("ServiceRegion");
                });

            modelBuilder.Entity("DataAccess.Entities.Mappings.ContractTourGuide_Tour", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.ContractTourGuide", "ContractTourGuide")
                        .WithMany("ContractTourGuides_Tours")
                        .HasForeignKey("ContractTourGuideId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Models.Activities.Tour", "Tour")
                        .WithMany("ContractTourGuides_Tours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContractTourGuide");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Event", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Regions.ServiceRegion", "ServiceRegion")
                        .WithMany("Events")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ServiceRegion");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Tour", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Regions.ServiceRegion", "ServiceRegion")
                        .WithMany("Tours")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ServiceRegion");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompanyTransaction", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompany", "PartnerCompany")
                        .WithMany("PartnerCompanyTransactions")
                        .HasForeignKey("PartnerCompanyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PartnerCompany");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractDriver", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Companies.Suppliers.SubContractWorkerSupplier", "SubContractWorkerSupplier")
                        .WithMany("ContractDrivers")
                        .HasForeignKey("SubContractWorkerSupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SubContractWorkerSupplier");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractTourGuide", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Companies.Suppliers.SubContractWorkerSupplier", "SubContractWorkerSupplier")
                        .WithMany("ContractTourGuides")
                        .HasForeignKey("SubContractWorkerSupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SubContractWorkerSupplier");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.Employee", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Countries.Country", "Country")
                        .WithMany("Employees")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Regions.ResidenceRegion", "ResidenceRegion")
                        .WithMany("Employees")
                        .HasForeignKey("ResidenceRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Country");

                    b.Navigation("ResidenceRegion");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.EventTicketOrderDetail", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Tickets.EventTicket", "EventTicket")
                        .WithMany("EventTicketOrderDetails")
                        .HasForeignKey("EventTicketId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Orders.EventTicketOrder", "EventTicketOrder")
                        .WithMany("EventTicketOrderDetails")
                        .HasForeignKey("EventTicketOrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("EventTicket");

                    b.Navigation("EventTicketOrder");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.ProductOrderDetail", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Products.Product", "Product")
                        .WithMany("ProductOrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Orders.ProductOrder", "ProductOrder")
                        .WithMany("ProductOrderDetails")
                        .HasForeignKey("ProductOrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Product");

                    b.Navigation("ProductOrder");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.OrderDetails.TourTicketOrderDetail", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Tickets.TourTicket", "TourTicket")
                        .WithMany("TourTicketOrderDetails")
                        .HasForeignKey("TourTicketId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Orders.TourTicketOrder", "TourTicketOrder")
                        .WithMany("TourTicketOrderDetails")
                        .HasForeignKey("TourTicketOrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("TourTicket");

                    b.Navigation("TourTicketOrder");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.EventTicketOrder", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.Employee", "Employee")
                        .WithMany("EventTicketOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", "WebUserAccount")
                        .WithMany("EventTicketOrders")
                        .HasForeignKey("WebUserAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("WebUserAccount");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.ProductOrder", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.Employee", "Employee")
                        .WithMany("ProductOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", "WebUserAccount")
                        .WithMany("ProductOrders")
                        .HasForeignKey("WebUserAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("WebUserAccount");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.TourTicketOrder", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Employees.Employee", "Employee")
                        .WithMany("TourTicketOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", "WebUserAccount")
                        .WithMany("TourTicketOrders")
                        .HasForeignKey("WebUserAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("WebUserAccount");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.PassTickets.PassEventTicket", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompanyTransaction", "PartnerCompanyTransaction")
                        .WithMany("PassEventTickets")
                        .HasForeignKey("PartnerCompanyTransactionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PartnerCompanyTransaction");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.PassTickets.PassTourTicket", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompanyTransaction", "PartnerCompanyTransaction")
                        .WithMany("PassTourTickets")
                        .HasForeignKey("PartnerCompanyTransactionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PartnerCompanyTransaction");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Products.Product", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Products.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Companies.Suppliers.ProductSupplier", "ProductSupplier")
                        .WithMany("Products")
                        .HasForeignKey("ProductSupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductSupplier");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.EventTicket", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Activities.Event", "Event")
                        .WithMany("EventTickets")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.TourTicket", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Activities.Tour", "Tour")
                        .WithMany("TourTickets")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.RentalVehicle", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Activities.Event", "Event")
                        .WithMany("RentalVehicles")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Companies.Suppliers.RentalVehicleSupplier", "RentalVehicleSupplier")
                        .WithMany("RentalVehicles")
                        .HasForeignKey("RentalVehicleSupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Activities.Tour", "Tour")
                        .WithMany("RentalVehicles")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");

                    b.Navigation("RentalVehicleSupplier");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.Vehicle", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Activities.Event", "Event")
                        .WithMany("Vehicles")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataAccess.Entities.Models.Activities.Tour", "Tour")
                        .WithMany("Vehicles")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.WebUsers.WebUserAccount", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.Countries.Country", "Country")
                        .WithMany("WebUserAccounts")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.WebUsers.WebUserProfile", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", "WebUserAccount")
                        .WithOne("WebUserProfile")
                        .HasForeignKey("DataAccess.Entities.Models.WebUsers.WebUserProfile", "WebUserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WebUserAccount");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DataAccess.Entities.Models.WebUsers.WebUserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Event", b =>
                {
                    b.Navigation("EventTickets");

                    b.Navigation("RentalVehicles");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Activities.Tour", b =>
                {
                    b.Navigation("ContractTourGuides_Tours");

                    b.Navigation("RentalVehicles");

                    b.Navigation("TourTickets");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompany", b =>
                {
                    b.Navigation("PartnerCompanyTransactions");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.PartnerCompanies.PartnerCompanyTransaction", b =>
                {
                    b.Navigation("PassEventTickets");

                    b.Navigation("PassTourTickets");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.ProductSupplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.RentalVehicleSupplier", b =>
                {
                    b.Navigation("RentalVehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Companies.Suppliers.SubContractWorkerSupplier", b =>
                {
                    b.Navigation("ContractDrivers");

                    b.Navigation("ContractTourGuides");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Countries.Country", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("WebUserAccounts");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractDriver", b =>
                {
                    b.Navigation("ContractDrivers_RentalVehicles");

                    b.Navigation("ContractDrivers_Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.ContractTourGuide", b =>
                {
                    b.Navigation("ContractTourGuides_ServiceRegions");

                    b.Navigation("ContractTourGuides_Tours");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Employees.Employee", b =>
                {
                    b.Navigation("EventTicketOrders");

                    b.Navigation("ProductOrders");

                    b.Navigation("TourTicketOrders");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.EventTicketOrder", b =>
                {
                    b.Navigation("EventTicketOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.ProductOrder", b =>
                {
                    b.Navigation("ProductOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Orders.TourTicketOrder", b =>
                {
                    b.Navigation("TourTicketOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Products.Product", b =>
                {
                    b.Navigation("ProductOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Products.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Regions.ResidenceRegion", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Regions.ServiceRegion", b =>
                {
                    b.Navigation("ContractTourGuides_ServiceRegions");

                    b.Navigation("Events");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.EventTicket", b =>
                {
                    b.Navigation("EventTicketOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Tickets.TourTicket", b =>
                {
                    b.Navigation("TourTicketOrderDetails");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.RentalVehicle", b =>
                {
                    b.Navigation("ContractDrivers_RentalVehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.Vehicles.Vehicle", b =>
                {
                    b.Navigation("ContractDrivers_Vehicles");
                });

            modelBuilder.Entity("DataAccess.Entities.Models.WebUsers.WebUserAccount", b =>
                {
                    b.Navigation("EventTicketOrders");

                    b.Navigation("ProductOrders");

                    b.Navigation("TourTicketOrders");

                    b.Navigation("WebUserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
